# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven
permissions:
  contents: read
  security-events: write
  
on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 20
      uses: actions/setup-java@v3
      with:
        java-version: '20'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - uses: axel-op/googlejavaformat-action@v3
      with:
        args: "--replace"
        skip-commit: true
    - name: Print diffs
      run: git --no-pager diff

    - name: Testing google java format
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        FILES=$(gh pr diff $GITHUB_HEAD_REF --name-only)
        json_data=$(echo -n  $FILES | jq -R -s '{ javaFiles: split(" ") | map(select(test("\\.java$")))}')
        echo $json_data
        curl -LOk https://github.com/google/google-java-format/releases/download/v1.18.1/google-java-format-1.18.1-all-deps.jar

        differing_files=()
        
        for file in $(echo "$json_data" | jq -r '.javaFiles[]'); do 
          java -jar google-java-format-1.18.1-all-deps.jar "$file" > "${file}_formatted"
          if ! cmp -s "$formatted_file" "$file"; then
            echo "$file is not properly formatted"
            differing_files+=("$formatted_file")            
          fi
        done

        if [ ${#differing_files[@]} -gt 0 ]; then
         comment="Suggested code formatting changes:"
          for difffile in "${differing_files[@]}"; do
            comment+="\n\n $difffile \n\n\`\`\`"
          done

          # Print the comment
          echo "$comment"
          gh pr comment ${{ github.event.number }} -b "$comment"
          
          echo "::error::Code formatting suggestion detected. Please review and apply the suggested changes."
          exit 1
        else
          # No differing files, exit successfully
          exit 0
        fi        
        
